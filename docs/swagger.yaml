definitions:
  auth.SignInRequest:
    properties:
      email:
        example: user@mail.com
        type: string
      password:
        example: supersecretpassword
        maxLength: 50
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  auth.SignUpRequest:
    properties:
      email:
        example: user@mail.com
        type: string
      password:
        example: supersecretpassword
        maxLength: 50
        minLength: 5
        type: string
      password_again:
        example: supersecretpassword
        type: string
    required:
    - email
    - password
    - password_again
    type: object
  github_com_danielbukowski_recipe-app-backend_internal_shared.DataResponse-recipe_RecipeResponse:
    properties:
      data:
        $ref: '#/definitions/recipe.RecipeResponse'
    type: object
  recipe.NewRecipeRequest:
    properties:
      content:
        example: Having all your ingredients the same temperature really helps here
        minLength: 5
        type: string
      title:
        example: Chocolate Cookies
        minLength: 5
        type: string
    required:
    - content
    - title
    type: object
  recipe.RecipeResponse:
    properties:
      content:
        example: Having all your ingredients the same temperature really helps here
        type: string
      created_at:
        example: "2025-02-05T21:35:31.00635Z"
        type: string
      title:
        example: Chocolate Cookies
        type: string
      updated_at:
        example: "2025-02-07T21:35:31.00635Z"
        type: string
    type: object
  recipe.UpdateRecipeRequest:
    properties:
      content:
        example: Having all your ingredients the same temperature really helps here
        minLength: 5
        type: string
      title:
        example: Chocolate Cookies
        minLength: 5
        type: string
    required:
    - content
    - title
    type: object
  shared.CommonResponse:
    properties:
      message:
        type: string
    type: object
  validator.ValidationErrorResponse:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A sample of API to recipe backend.
  title: Recipe API
  version: 0.2.0
paths:
  /api/v1/auth/signout:
    post:
      description: Sign out from the app and delete the session cookie.
      responses:
        "204":
          description: Sign out successfully.
          schema:
            $ref: '#/definitions/shared.CommonResponse'
      summary: Sign out
      tags:
      - auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Create a user account for the API.
      parameters:
      - description: Request body for creating a user account.
        in: body
        name: SignUpRequest
        required: true
        schema:
          $ref: '#/definitions/auth.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User account created successfully.
          schema:
            $ref: '#/definitions/shared.CommonResponse'
        "400":
          description: Invalid data provided.
          schema:
            $ref: '#/definitions/validator.ValidationErrorResponse'
      summary: Sign up
      tags:
      - auth
  /api/v1/healthcheck:
    get:
      description: Check the status of the recipe API.
      responses:
        "200":
          description: The API is healthy.
      summary: Check health
      tags:
      - health
  /api/v1/recipes:
    post:
      consumes:
      - application/json
      description: Insert a new recipe by providing a request body with title and
        content for the recipe you want to save.
      parameters:
      - description: Request body with title and content.
        in: body
        name: NewRecipeRequest
        required: true
        schema:
          $ref: '#/definitions/recipe.NewRecipeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Recipe saved successfully.
          schema:
            $ref: '#/definitions/shared.CommonResponse'
        "400":
          description: Invalid data provided.
          schema:
            $ref: '#/definitions/validator.ValidationErrorResponse'
        "404":
          description: Recipe not found.
          schema:
            $ref: '#/definitions/shared.CommonResponse'
      summary: Create a new recipe
      tags:
      - recipes
  /api/v1/recipes/{id}:
    delete:
      description: Delete a recipe by ID.
      parameters:
      - description: UUID for a recipe
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Recipe deleted successfully.
        "400":
          description: Invalid data provided.
          schema:
            $ref: '#/definitions/validator.ValidationErrorResponse'
      summary: Delete a recipe
      tags:
      - recipes
    get:
      description: Get a recipe by ID.
      parameters:
      - description: UUID for a recipe
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Recipe fetched successfully.
          schema:
            $ref: '#/definitions/github_com_danielbukowski_recipe-app-backend_internal_shared.DataResponse-recipe_RecipeResponse'
        "400":
          description: Invalid data provided.
          schema:
            $ref: '#/definitions/validator.ValidationErrorResponse'
        "404":
          description: Recipe is not found.
          schema:
            $ref: '#/definitions/shared.CommonResponse'
      summary: Get a recipe
      tags:
      - recipes
    put:
      consumes:
      - application/json
      description: Update title or content of a recipe by UUID.
      parameters:
      - description: UUID of a recipe.
        in: path
        name: id
        required: true
        type: string
      - description: Request body with title and content for updating a recipe.
        in: body
        name: UpdateRecipeRequest
        required: true
        schema:
          $ref: '#/definitions/recipe.UpdateRecipeRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Recipe updated successfully.
        "400":
          description: Invalid data provided.
          schema:
            $ref: '#/definitions/validator.ValidationErrorResponse'
        "409":
          description: Database conflict occurred when trying to saving a recipe.
          schema:
            $ref: '#/definitions/shared.CommonResponse'
      summary: Update a recipe
      tags:
      - recipes
swagger: "2.0"
