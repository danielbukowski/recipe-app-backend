{
    "swagger": "2.0",
    "info": {
        "description": "A sample of API to recipe backend.",
        "title": "Recipe API",
        "contact": {},
        "version": "0.2.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/auth/signout": {
            "post": {
                "description": "Sign out from the app and delete the session cookie.",
                "tags": [
                    "auth"
                ],
                "summary": "Sign out",
                "responses": {
                    "204": {
                        "description": "Sign out successfully.",
                        "schema": {
                            "$ref": "#/definitions/shared.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "description": "Create a user account for the API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "Request body for creating a user account.",
                        "name": "SignUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User account created successfully.",
                        "schema": {
                            "$ref": "#/definitions/shared.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data provided.",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/healthcheck": {
            "get": {
                "description": "Check the status of the recipe API.",
                "tags": [
                    "health"
                ],
                "summary": "Check health",
                "responses": {
                    "200": {
                        "description": "The API is healthy."
                    }
                }
            }
        },
        "/api/v1/recipes": {
            "post": {
                "description": "Insert a new recipe by providing a request body with title and content for the recipe you want to save.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Create a new recipe",
                "parameters": [
                    {
                        "description": "Request body with title and content.",
                        "name": "NewRecipeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/recipe.NewRecipeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recipe saved successfully.",
                        "schema": {
                            "$ref": "#/definitions/shared.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data provided.",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Recipe not found.",
                        "schema": {
                            "$ref": "#/definitions/shared.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/recipes/{id}": {
            "get": {
                "description": "Get a recipe by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Get a recipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID for a recipe",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe fetched successfully.",
                        "schema": {
                            "$ref": "#/definitions/github_com_danielbukowski_recipe-app-backend_internal_shared.DataResponse-recipe_RecipeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data provided.",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Recipe is not found.",
                        "schema": {
                            "$ref": "#/definitions/shared.CommonResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update title or content of a recipe by UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Update a recipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of a recipe.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body with title and content for updating a recipe.",
                        "name": "UpdateRecipeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/recipe.UpdateRecipeRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe updated successfully."
                    },
                    "400": {
                        "description": "Invalid data provided.",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Database conflict occurred when trying to saving a recipe.",
                        "schema": {
                            "$ref": "#/definitions/shared.CommonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a recipe by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Delete a recipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID for a recipe",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe deleted successfully."
                    },
                    "400": {
                        "description": "Invalid data provided.",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@mail.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5,
                    "example": "supersecretpassword"
                }
            }
        },
        "auth.SignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "password_again"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@mail.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5,
                    "example": "supersecretpassword"
                },
                "password_again": {
                    "type": "string",
                    "example": "supersecretpassword"
                }
            }
        },
        "github_com_danielbukowski_recipe-app-backend_internal_shared.DataResponse-recipe_RecipeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/recipe.RecipeResponse"
                }
            }
        },
        "recipe.NewRecipeRequest": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 5,
                    "example": "Having all your ingredients the same temperature really helps here"
                },
                "title": {
                    "type": "string",
                    "minLength": 5,
                    "example": "Chocolate Cookies"
                }
            }
        },
        "recipe.RecipeResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Having all your ingredients the same temperature really helps here"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-02-05T21:35:31.00635Z"
                },
                "title": {
                    "type": "string",
                    "example": "Chocolate Cookies"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-02-07T21:35:31.00635Z"
                }
            }
        },
        "recipe.UpdateRecipeRequest": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 5,
                    "example": "Having all your ingredients the same temperature really helps here"
                },
                "title": {
                    "type": "string",
                    "minLength": 5,
                    "example": "Chocolate Cookies"
                }
            }
        },
        "shared.CommonResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "validator.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}